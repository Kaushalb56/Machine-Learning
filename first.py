# -*- coding: utf-8 -*-
"""first.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V3aFsplJubMjCaDt7OUd47dbi2ieRhBu
"""

## my first ML project ##
import pandas as pd

df = pd.read_csv('https://raw.githubusercontent.com/dataprofessor/data/master/delaney_solubility_with_descriptors.csv')
print(df)

y = df['logS']
y

x = df.drop('logS',axis=1)
x

###Split
from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=100)

x_train

x_test

"""### ***Model Building***

### *Linear Regression*
"""

from sklearn.linear_model import LinearRegression

lr = LinearRegression()

lr.fit(x_train,y_train)

LinearRegression()

y_lr_train_pred = lr.predict(x_train)
y_lr_test_pred = lr.predict(x_test)

y_lr_train_pred

"""### Evaluate model performance ###"""

from sklearn.metrics import mean_squared_error,r2_score

lr_train_mse = mean_squared_error(y_train,y_lr_train_pred)
lr_train_r2 = r2_score(y_train,y_lr_train_pred)

lr_test_mse = mean_squared_error(y_test,y_lr_test_pred)
lr_test_r2 = r2_score(y_test,y_lr_test_pred)

print("Lr MSE (TRAIN)",lr_train_mse)
print("Lr R2 (TRAIN)",lr_train_r2)
print("Lr MSE (TEST)",lr_test_mse)
print("Lr R2 (TEST)",lr_test_r2)

lr_result = pd.DataFrame(['Linear Regression',lr_train_mse,lr_train_r2,lr_test_mse,lr_test_r2]).transpose()
lr_result.columns = ['MEthod','Training MSE','Training R2','Testing MSE','Testing r2']
lr_result

import matplotlib.pyplot as plt

plt.scatter(x=y_train,y=y_lr_train_pred,alpha=0.3)
plt.plot;
plt.ylabel("predict logs")
plt.xlabel("experimental logs")



"""### nothing"""